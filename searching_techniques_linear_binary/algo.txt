Algorithm for Searching Techniques (Linear and Binary Search):

**1. Linear Search**

   *   **Concept:** Checks each element in the list sequentially until a match is found or the end of the list is reached.
   *   **Steps:**
      1.  Start from the first element of the array/list.
      2.  Compare the current element with the target value.
      3.  If they match, the search is successful, and return the index of the element.
      4.  If they don't match, move to the next element.
      5.  Repeat steps 2-4 until the end of the array/list is reached.
      6.  If the end is reached and no match is found, the search is unsuccessful.

**2. Binary Search**

   *   **Concept:** Efficiently finds an item in a *sorted* array by repeatedly dividing the search interval in half. 
   *   **Pre-requisite:** The array/list must be sorted.
   *   **Steps:**
      1.  Initialize `low` to the first index and `high` to the last index of the array.
      2.  While `low` is less than or equal to `high`:
          a.  Calculate `mid` as the average of `low` and `high` (or `low + (high - low) / 2` to prevent overflow).
          b.  Compare the element at `mid` with the target value:
              i.  If they match, the search is successful, and return `mid`.
              ii. If the element at `mid` is less than the target, set `low` to `mid + 1` (search in the right half).
              iii. If the element at `mid` is greater than the target, set `high` to `mid - 1` (search in the left half).
      3.  If the loop finishes and no match is found, the search is unsuccessful.